name: Publish documentation

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Generate diagrams from Structurizr workspace
        run: |
          TMP_DIR=$(mktemp -d)
          pushd $TMP_DIR
          curl -sLOJ https://github.com/structurizr/cli/releases/download/v${STRUCTURIZR_VERSION}/structurizr-cli-${STRUCTURIZR_VERSION}.zip
          mkdir structurizr-${STRUCTURIZR_VERSION}
          pushd structurizr-${STRUCTURIZR_VERSION}
          unzip -q ../structurizr-cli-${STRUCTURIZR_VERSION}.zip
          STRUCTURIZR_DIR=$(pwd)
          popd
          popd
          
          pushd docs
          PATH=$JAVA_HOME_17_X64/bin:$STRUCTURIZR_DIR:$PATH; structurizr.sh export \
              -o src/main/asciidoc/img \
              -w src/main/structurizr/workspace.dsl \
              -f plantuml
          popd
        env:
          STRUCTURIZR_VERSION: 1.30.0

      - name: Generate documentation site
        run: mvn -B package -pl :docs

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: docs/target/html

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: github.event_name != 'pull_request'

    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2